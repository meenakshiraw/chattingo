version: "3.9"

services:
  mysql:
    image: mysql:8.0
    container_name: chattingo-mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
      MYSQL_DATABASE: chattingo_db
    volumes:
      - chattingo-db-data:/var/lib/mysql
    networks:
      - chattingo-network

  backend:
    build: ./backend
    container_name: chattingo-backend
    environment:
      SERVER_PORT: ${SERVER_PORT}
      SPRING_DATASOURCE_URL: ${SPRING_DATASOURCE_URL}
      SPRING_DATASOURCE_USERNAME: ${SPRING_DATASOURCE_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
      CORS_ALLOWED_ORIGINS: ${CORS_ALLOWED_ORIGINS}
      CORS_ALLOWED_METHODS: ${CORS_ALLOWED_METHODS}
    ports:
      - "${SERVER_PORT}:${SERVER_PORT}"

    
    # This ensures the container always sees the .env from Jenkins workspace.
    volumes:
      - .env:/app/.env

    depends_on:
      - mysql
    networks:
      - chattingo-network

  frontend:
    build: ./frontend
    container_name: chattingo-frontend
    ports:
      - "80:80"   # map Nginx port 80 to host 3000
      - "443:443"
    volumes:
        #- ./frontend/nginx.conf:/etc/nginx/conf.d/default.conf:ro

        # This ensures the container always sees the .env from Jenkins workspace.
      - ./ssl:/etc/nginx/ssl:ro
      - ./frontend/.env:/app/.env:ro

    env_file:
      - ./frontend/.env

    # This ensures the container always sees the .env from Jenkins workspace.
    depends_on:
      - backend
    networks:
      - chattingo-network

volumes:
  chattingo-db-data:

networks:
  chattingo-network:
    driver: bridge

